#include<iostream>
#include<vector>
#include<set>
using namespace std;

void print(vector<int>& arr){
    for(int i=0;i<arr.size();i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}

void reverse(vector<int>& arr, int start, int end){
    while(start < end){
        swap(arr[start++], arr[end--]);
    }
}

vector<int> moveZeroesToEnd(vector<int>& arr){
    vector<int> temp;
    for(int i=0;i<arr.size();i++){
        if(arr[i] != 0){
            temp.push_back(arr[i]);
        }
    }
    for(int i=0;i<arr.size();i++){
        if(arr[i] == 0){
            temp.push_back(arr[i]);
        }
    }
    return temp;
}

void leftRotateOptimal(vector<int>& arr, int k){
    k = k%arr.size();
    if(k==0) return;
    reverse(arr, 0, k - 1);
    reverse(arr, k, arr.size() - 1);
    reverse(arr, 0, arr.size() - 1);
}

void leftRotateByKPlaces(vector<int>& arr, int k){
    k = k % arr.size();
    if(k==0) return;
    vector<int> temp(k);
    for(int i=0;i<=k;i++){
        temp[i] = arr[i];
    }
    
    for(int i=0;i<arr.size()-k;i++){
        arr[i] = arr[i+k];
    }
    
    for(int i=arr.size()-k;i<arr.size();i++){
        arr[i] = temp [i - (arr.size() - k)];
    }
}

void leftRotateArray(vector<int>& arr){
    int temp = arr[0];
    for(int i=1;i<arr.size();i++){
        arr[i-1] = arr[i];
    }
    arr[arr.size() - 1] = temp;
}

int main(){
    vector<int> arr = {1,2,3,0,0,5,8,0};
    vector<int> result = moveZeroesToEnd(arr);
    // leftRotateOptimal(arr, 51);
    print(result);
}